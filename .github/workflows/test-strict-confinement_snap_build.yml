name: test-strict-confinement snap edge build

on:
  workflow_dispatch:
  workflow_call:

jobs:
  snap:
    strategy:
      fail-fast: false
      matrix:
        releases: [20]
    runs-on:
      group: "Canonical self-hosted runners"
      labels:
        - self-hosted
        - linux
        - jammy
        - large
        - X64
    timeout-minutes: 1200 #20h, this will timeout sooner due to inner timeouts
    env:
      SERIES: series_${{ matrix.releases }}
      SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_CRED }}
    name: Frontend ${{ matrix.releases }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Add LP credentials
        run: |
          mkdir -p ~/.local/share/snapcraft/provider/launchpad/
          echo '${{ secrets.LP_CRED }}' > ~/.local/share/snapcraft/provider/launchpad/credentials
          git config --global user.email "ce-qa@lists.canonical.com"
          git config --global user.name "ceqa"
      - uses: Wandalen/wretry.action@v3.4.0_js_action
        name: Building the snaps
        timeout-minutes: 600 # 10hours
        with:
          action: snapcore/action-build
          attempt_delay: 600000 # 10min
          attempt_limit: 5
          with: |
            path: series_${{ matrix.releases }}
            snapcraft-channel: 7.x/stable
            snapcraft-args: remote-build --build-for amd64,arm64,armhf --launchpad-accept-public-upload
      - uses: actions/upload-artifact@v4
        name: Upload the snaps as artefacts
        with:
          name: test-strict-confinement${{ matrix.releases }}
          path: series_${{ matrix.releases }}/*.snap
      - uses: Wandalen/wretry.action@v3.4.0_js_action
        name: Upload the snaps to the store
        timeout-minutes: 600 # 10hours
        with:
          attempt_delay: 600000 # 10min
          attempt_limit: 10
          command: |
            for snap in series_${{ matrix.releases }}/*.snap ; \
            do \
              echo "Uploading $snap..." ; \
              if [ ${{ matrix.releases }} = '20' ]; then \
                snapcraft upload $snap --release latest/edge ; \
              fi ; \
            done
